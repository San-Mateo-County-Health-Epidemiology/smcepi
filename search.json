[{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 smcepi authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/articles/azure_helpers_overview.html","id":"basic-usage","dir":"Articles","previous_headings":"azure_connect()","what":"Basic usage","title":"Azure Helpers","text":"wrapper around DBI::dbConnect() function. required input .yml file contains credentials connecting database. function expects .yml file includes values : server, driver, authenticator, database, uid_suffix port. ’s example .yml file template: pass .yml file function, ’ll prompted enter Windows password connected Azure database ’ve specified .yml file.","code":"default:   db:     server: 'server-name'     driver: 'ODBC Driver 18 for SQL Server'     authenticator: 'ActivedirectoryPassword'     database: 'database-name'     uid_suffix: '@organization.org'     port: port-number azure_con <- azure_connect(creds_file = \"*.yml\")"},{"path":[]},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/articles/azure_helpers_overview.html","id":"creds_position","dir":"Articles","previous_headings":"azure_connect() > Additional options","what":"creds_position","title":"Azure Helpers","text":"multiple sets credentials stored .yml file, can select set ’d like use specifying position credentials. Let’s say .yml file looks like : want use second set credentials (db_2) instead first set (db_1) set creds_position = 2:","code":"default:   db_1:     server: 'server-name'     driver: 'ODBC Driver 18 for SQL Server'     authenticator: 'ActivedirectoryPassword'     database: 'database-name'     uid_suffix: '@organization.org'     port: port-number      db_2:     server: 'server-name'     driver: 'ODBC Driver 18 for SQL Server'     authenticator: 'ActivedirectoryPassword'     database: 'database-name'     uid_suffix: '@organization.org'     port: port-number azure_con <- azure_connect(creds_file = \"*.yml\",                            creds_position = 2)"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/articles/azure_helpers_overview.html","id":"pwd","dir":"Articles","previous_headings":"azure_connect() > Additional options","what":"pwd","title":"Azure Helpers","text":"default, azure_connect() allows manually enter password run function. prefer use stored password, can override default using pwd argument.","code":"azure_con <- azure_connect(creds_file = \"*.yml\",                            pwd = stored_password)"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/articles/azure_helpers_overview.html","id":"azure_import_loop","dir":"Articles","previous_headings":"","what":"azure_import_loop()","title":"Azure Helpers","text":"function creates table Azure R. wrapper function DBI::dbWriteTable() DBI::dbAppendTable() functions. First, function breaks dataset imported smaller groups loops groups. first group used create table subsequent groups appended table. function helpful writing large datasets R Azure. Small datasets can sent R Azure just using DBI::dbWriteTable() function. Arguements: azure_con: DBI Connection object returned dbConnect(). can also create using smcepi::azure_connect() function. See help text DBI::dbWriteTable() technical details. data: data.frame object plan import group_size: integer indicates size import groups. Ex: group_size 50 split dataset groups 50 records import group time table_name: string specify name table Azure field_types: Optional parameter pass list varchar(n) lengths Azure table. Can created smcepi::varchar_max() function","code":"azure_import_loop(azure_con = azure_con,                   data = data,                   group_size = 500,                   table_name = \"new_azure_table_name\",                   field_types = varchar_max)"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/articles/azure_helpers_overview.html","id":"varchar_max","dir":"Articles","previous_headings":"","what":"varchar_max()","title":"Azure Helpers","text":"Use generate list varchar(n) specifications used R Azure import DBI:dbWriteTable() smcepi::azure_import_loop() functions. list specifies varchar(n) value character variable based maximum string length variable. n 255 variables maximum string lengths 255 less n maximum string length variables maximum string lengths longer 255. Pass dataset plan import function get varchar(n) fields import:","code":"data <- data.frame(           col1 = c(\"blue\", \"pink\", \"green\", \"yellow\"),           col2 = c(paste(rep(\"a\", 1000), collapse = \"\"), \"b\", \"cc\", \"ddd\"))  smcepi::varchar_max(data) #>            col1            col2  #>  \"varchar(255)\" \"varchar(1000)\""},{"path":[]},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/articles/smc-geographies.html","id":"basic-usage","dir":"Articles","previous_headings":"smc_city_clean()","what":"Basic usage","title":"San Mateo Geography Functions","text":"function uses regular expressions clean San Mateo County city names. Non-San Mateo city names return NA value. default, function assumes variable want clean called city save cleaned results variable called city_clean.","code":"data <- data.frame(   city = c(\"Burligame\", \"Fost City\", \"San Mato\", \"Daily Cit\", \"S S Francisco\", \"South San Fransico\", \"SoSan Franc\", \"San Francisco\")   )   data %>%   smc_city_clean()"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/articles/smc-geographies.html","id":"additional-options","dir":"Articles","previous_headings":"smc_city_clean()","what":"Additional options","title":"San Mateo Geography Functions","text":"input column called city pass name city variable city_col argument. also option specifying name variable cleaned cities. default city_clean.","code":"data <- data.frame(   city_dirty = c(\"Burligame\", \"Fost City\", \"San Mato\", \"Daily Cit\", \"S S Francisco\", \"South San Fransico\", \"SoSan Franc\", \"San Francisco\")   )   data %>%   smc_city_clean(city_col = \"city_dirty\",                  new_col = \"smc_city\")"},{"path":[]},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/articles/smc-geographies.html","id":"basic-usage-1","dir":"Articles","previous_headings":"smc_zip_region_sort()","what":"Basic usage","title":"San Mateo Geography Functions","text":"function categorizes zip codes county regions. expected input variable data frame return second variable zip region. region options : North, Mid, South, Coastside “residential zip” (PO Boxes).","code":"data <- data.frame(   zip = c(\"94015\", \"94403\", \"94303\", \"94019\", \"94128\", \"94110\")   )  data %>%   smc_zip_region_sort()"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/articles/smc-geographies.html","id":"additional-options-1","dir":"Articles","previous_headings":"smc_zip_region_sort()","what":"Additional options","title":"San Mateo Geography Functions","text":"default, function expects variable zip codes called zip save zip regions variable called zip_region. However, input column called zip can override default zip_col argument. can also change outputted variable name region_col argument.","code":"data <- data.frame(   smc_zip = c(\"94015\", \"94403\", \"94303\", \"94019\", \"94128\", \"94110\")   )  data %>%   smc_zip_region_sort(zip_col = \"smc_zip\",                       region_col = \"smc_zip_region\")"},{"path":[]},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/articles/style_guide_templates.html","id":"theme_gg_smc","dir":"Articles","previous_headings":"Using formatting themes","what":"theme_gg_smc()","title":"Style Guide Templates","text":"theme_gg_smc() format ggplot2 charts according OEE style guidelines. Embedded within theme_gg_smc() load_smc_fonts() function download /enable fonts extrafont package. haven’t already installed extrafont fonts computer, theme_gg_smc() load_smc_fonts() functions download first time run either functions.","code":"library(smcepi) library(ggplot2)  iris %>%    ggplot(aes(x = Species,               y = Sepal.Length)) +   geom_point(     position = position_jitter(w = 1/6, h = 0),     size = 4,      color = \"#006cb6\",      alpha = 2/3   ) +   scale_y_continuous(     limits = c(4, 8),     breaks = seq(4, 8, 2)   ) +    labs(title = \"Iris Jitter Plot\") +    theme_gg_smc(plot_lines = \"vertical\")"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/articles/style_guide_templates.html","id":"theme_ft_smc","dir":"Articles","previous_headings":"Using formatting themes","what":"theme_ft_smc()","title":"Style Guide Templates","text":"theme_ft_smc() format flextable charts according OEE style guidelines. Like smc_gg_theme() function, load_smc_fonts() embedded within theme_ft_smc() function.","code":"library(smcepi) library(flextable)  iris %>%   dplyr::slice(1:5) %>%   dplyr::select(Species, everything()) %>%   flextable() %>%   footnote(i = 1, j = 1, value = as_paragraph(\"footer test\")) %>%   theme_ft_smc()"},{"path":[]},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/articles/style_guide_templates.html","id":"gg_color_title","dir":"Articles","previous_headings":"Selectively coloring text","what":"gg_color_title()","title":"Style Guide Templates","text":"gg_color_title() allows specify color specific words phrases ggplot2 title, subtitle caption. order gg_color_title() render correctly chart, use ggtext::element_markdown() ggplot2::theme() instead using standard element_markdown(). theme_gg_smc() function uses element_markdown().","code":"library(ggtext)  brown_color <- \"#873600\" blue_color <- \"#006cb6\"  title <- gg_color_title(\"Brown and blue eyes <br> are most common\",                        c(\"Brown\", \"blue\"), c(brown_color, blue_color)) HairEyeColor %>%   data.frame() %>%   dplyr::group_by(Eye) %>%   dplyr:: summarize(freq = sum(Freq),                     .groups = \"keep\") %>%   dplyr:: ungroup() %>%   ggplot2::ggplot(aes(x = Eye,                       y = freq,                       fill = Eye)) +   scale_fill_manual(values = c(\"Brown\" = brown_color,                                \"Blue\" = blue_color,                                \"Hazel\" = \"#D5D8DC\",                                \"Green\" = \"#D5D8DC\")) +    geom_bar(position = \"dodge\",            stat = \"identity\") +   labs(title = title) +   theme_gg_smc(legend_loc = \"none\") +   ggplot2::theme(plot.title = ggtext::element_markdown(size = 16, hjust = 0, face = \"bold\"))"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package maintainer. Maintainer.","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"person) (2024). smcepi: Useful functions San Mateo County Epidemiologists. R package version 0.2.0, https://San-Mateo-County-Health-Epidemiology.github.io/smcepi/, https://san-mateo-county-health-epidemiology.github.io/smcepi/, https://github.com/San-Mateo-County-Health-Epidemiology/smcepi.","code":"@Manual{,   title = {smcepi: Useful functions for San Mateo County Epidemiologists},   author = {{person)}},   year = {2024},   note = {R package version 0.2.0, https://San-Mateo-County-Health-Epidemiology.github.io/smcepi/, https://san-mateo-county-health-epidemiology.github.io/smcepi/},   url = {https://github.com/San-Mateo-County-Health-Epidemiology/smcepi}, }"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/index.html","id":"smcepi","dir":"","previous_headings":"","what":"Useful functions for San Mateo County Epidemiologists","title":"Useful functions for San Mateo County Epidemiologists","text":"goal smcepi provide functions make data analysis easier San Mateo County epidemiologists.","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Useful functions for San Mateo County Epidemiologists","text":"can install development version smcepi GitHub : Broadly speaking, functions package fall categories: data visualization templates follow SMC style guide helper functions connecting Azure R misc file management","code":"# install.packages(\"devtools\") devtools::install_github(\"San-Mateo-County-Health-Epidemiology/smcepi\")"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/azure_connect.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to Azure — azure_connect","title":"Connect to Azure — azure_connect","text":"Use function connect Azure database R. wrapper function DBI::dbConnect function.","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/azure_connect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to Azure — azure_connect","text":"","code":"azure_connect(creds_file,     creds_position = 1,     pwd = rstudioapi::askForPassword(\"Microsoft password\"))"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/azure_connect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to Azure — azure_connect","text":"creds_file path .yml file Azure information. .yml must include: server, driver, authenticator, database, uid_suffix port creds_position number identifies set credentials .yml file use. defaults 1, first set credentials. one set credentials config file want use second set, set creds_position = 2 pwd default, allows enter Windows password. can override entering password argument.","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/azure_connect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to Azure — azure_connect","text":"Microsoft SQL server connection","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/azure_connect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to Azure — azure_connect","text":"","code":"if (FALSE) { # \\dontrun{ # example .yml file format: default:   db:      server: 'server-name'      driver: 'ODBC Driver 18 for SQL Server'      authenticator: 'ActivedirectoryPassword'      database: 'database-name'      uid_suffix: '@organization.org'      port: port-number  # connecting with default credentials + windows password: con <- azure_connect(creds_file = \"credentials.yml\")  # connecting with the second set of credentials and a custom password con <- azure_connect(creds_file = \"credentials.yml\", creds_position = 2, pwd = \"password\") } # }"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/azure_import_loop.html","id":null,"dir":"Reference","previous_headings":"","what":"Write large datasets from R to Azure — azure_import_loop","title":"Write large datasets from R to Azure — azure_import_loop","text":"function creates table Azure R. wrapper function DBI::dbWriteTable DBI::dbAppendTable functions. function breaks dataset imported smaller groups loops groups. first group used create table subsequent groups appended table.","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/azure_import_loop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write large datasets from R to Azure — azure_import_loop","text":"","code":"azure_import_loop(azure_con, data, group_size, table_name, field_types = NULL)"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/azure_import_loop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write large datasets from R to Azure — azure_import_loop","text":"azure_con DBI Connection object returned dbConnect(). See help text DBI::dbWriteTable details data data.frame object plan import group_size integer indicates size import groups. Ex: group_size 50 split dataset groups 50 records import group time table_name string specify name table Azure field_types Optional parameter pass list varchar(n) lengths Azure table. Can created smcepi::varchar_max() function","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/azure_import_loop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write large datasets from R to Azure — azure_import_loop","text":"import data azure return errors DBI::dbWriteTable DBI::dbAppendTable functions","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/azure_import_loop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write large datasets from R to Azure — azure_import_loop","text":"","code":"if (FALSE) { # \\dontrun{  azure_import_loop(azure_con = azure_con,                   data = data,                   group_size = 500,                   table_name = \"new_azure_table_name\",                   field_types = varchar_max)  } # }"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/gg_color_title.html","id":null,"dir":"Reference","previous_headings":"","what":"Using gg_color_title() — gg_color_title","title":"Using gg_color_title() — gg_color_title","text":"function allows selectively color words text ggplot2 plot. order work, need use gg_text::element_markdown() ggplot2::theme text want color.","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/gg_color_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using gg_color_title() — gg_color_title","text":"","code":"gg_color_title(title_text, highlight_words, highlight_colors)"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/gg_color_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Using gg_color_title() — gg_color_title","text":"title_text string entire title (subtitle caption) highlight_words vector words want highlight title_text string. vector must length highlight_colors vector highlight_colors vector colors want word highlight_words argument. first color corresponds first word, second color second word, etc. vector must length highlight_words vector","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/gg_color_title.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Using gg_color_title() — gg_color_title","text":"string can used ggtext::element_markdown() title","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/gg_color_title.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Using gg_color_title() — gg_color_title","text":"","code":"title <- gg_color_title(\"Brown and blue eyes are most common\",                        c(\"Brown\", \"blue\"), c(\"#873600\", \"#006cb6\")) HairEyeColor %>%  data.frame() %>%  dplyr::group_by(Eye) %>%  dplyr:: summarize(freq = sum(Freq),  .groups = \"keep\") %>%  dplyr:: ungroup() %>%  ggplot2::ggplot(ggplot2::aes(x = Eye,  y = freq,  fill = Eye)) +  ggplot2::geom_bar(position = \"dodge\",  stat = \"identity\") +  ggplot2::labs(title = title) +  ggplot2::theme(plot.title = ggtext::element_markdown(size = 16, hjust = 0, face = \"bold\"))"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/load_smc_fonts.html","id":null,"dir":"Reference","previous_headings":"","what":"Download SMC Fonts — load_smc_fonts","title":"Download SMC Fonts — load_smc_fonts","text":"function uses 'extrafont' package download enable Arial Georgia official fonts SMC style guide.","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/load_smc_fonts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download SMC Fonts — load_smc_fonts","text":"","code":"load_smc_fonts()"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/load_smc_fonts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download SMC Fonts — load_smc_fonts","text":"enable extrafont fonts computer.","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/load_smc_fonts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download SMC Fonts — load_smc_fonts","text":"","code":"# just run the function empty"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::[\\%>\\%][magrittr::pipe] details.","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/read_tsv_cr.html","id":null,"dir":"Reference","previous_headings":"","what":"Using read_tsv_cr — read_tsv_cr","title":"Using read_tsv_cr — read_tsv_cr","text":"wrapper read.csv2 meant specifically CalREDIE tab separated files DDP.","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/read_tsv_cr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using read_tsv_cr — read_tsv_cr","text":"","code":"read_tsv_cr(file)"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/read_tsv_cr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Using read_tsv_cr — read_tsv_cr","text":"file file path .tsv file","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/read_tsv_cr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Using read_tsv_cr — read_tsv_cr","text":"data frame","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/read_tsv_cr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Using read_tsv_cr — read_tsv_cr","text":"","code":"if (FALSE) { # \\dontrun{ data <- read_tsv_cr(\"file.tsv\") } # }"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/smc_city_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"cleaning up San Mateo Cities in a data frame — smc_city_clean","title":"cleaning up San Mateo Cities in a data frame — smc_city_clean","text":"function meant used clean San Mateo cities dataframe. look San Mateo County cities - look cities. Non-San Mateo cities return NA city_clean column.","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/smc_city_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cleaning up San Mateo Cities in a data frame — smc_city_clean","text":"","code":"smc_city_clean(data,     city_col,     new_col)"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/smc_city_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cleaning up San Mateo Cities in a data frame — smc_city_clean","text":"data name dataframe city variable like clean city_col (optional): string specifies name city variable want clean. default, function assumes variable called city. new_col (optional): string specify name variable cleaned city names. default cleaned cities saved variable called city_clean","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/smc_city_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cleaning up San Mateo Cities in a data frame — smc_city_clean","text":"dataset new variable cleaned city values","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/smc_city_clean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"cleaning up San Mateo Cities in a data frame — smc_city_clean","text":"","code":"data <- data.frame(  city_dirty = c(\"Burligame\", \"Fost City\", \"San Mato\", \"Daily Cit\", \"S S Francisco\",                 \"South San Fransico\", \"SoSan Franc\", \"San Francisco\")  )  data %>%     smc_city_clean(city_col = \"city_dirty\",                    new_col = \"city_smc\") #>           city_dirty            city_smc #> 1          Burligame          Burlingame #> 2          Fost City         Foster City #> 3           San Mato           San Mateo #> 4          Daily Cit           Daly City #> 5      S S Francisco South San Francisco #> 6 South San Fransico South San Francisco #> 7        SoSan Franc South San Francisco #> 8      San Francisco                <NA>"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/smc_zip_region_sort.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify zip codes by region in San Mateo County — smc_zip_region_sort","title":"Classify zip codes by region in San Mateo County — smc_zip_region_sort","text":"function sorts 5-digit San Mateo zip codes county regions: north, south, mid, coastside \"residential zip\". Non-San Mateo zipcodes return NA city_clean column.","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/smc_zip_region_sort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify zip codes by region in San Mateo County — smc_zip_region_sort","text":"","code":"smc_zip_region_sort(data,                            zip_col = \"zip\",                            region_col = \"zip_region\")"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/smc_zip_region_sort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify zip codes by region in San Mateo County — smc_zip_region_sort","text":"data name dataframe zip code variable like sort zip_col (optional): string specifies name zip code variable want sort. default function assumes zipcodes stored variable called zip region_col (optional): string specify name variable zip regions. default sorted zipcodes saved variable called region_col","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/smc_zip_region_sort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify zip codes by region in San Mateo County — smc_zip_region_sort","text":"dataset new variable sorted zip codes","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/smc_zip_region_sort.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classify zip codes by region in San Mateo County — smc_zip_region_sort","text":"","code":"data <- data.frame(   cty_zip = c(\"94015\", \"94403\", \"94303\", \"94019\", \"94128\", \"94110\")   )  data %>%   smc_zip_region_sort(zip_col = \"cty_zip\",                       region_col = \"cty_zip_region\") #>   cty_zip        cty_zip_region #> 1   94015                 North #> 2   94403                   Mid #> 3   94303                 South #> 4   94019                 Coast #> 5   94128 Not a residential zip #> 6   94110                  <NA>"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/smcepi-package.html","id":null,"dir":"Reference","previous_headings":"","what":"smcepi: Useful functions for San Mateo County Epidemiologists — smcepi-package","title":"smcepi: Useful functions for San Mateo County Epidemiologists — smcepi-package","text":"Handy functions use San Mateo County epidemiologists.","code":""},{"path":[]},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/theme_ft_smc.html","id":null,"dir":"Reference","previous_headings":"","what":"Using theme_ft_smc — theme_ft_smc","title":"Using theme_ft_smc — theme_ft_smc","text":"function format flextable object according San Mateo County Office Epidemiology Evaluation's style guide.","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/theme_ft_smc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using theme_ft_smc — theme_ft_smc","text":"","code":"theme_ft_smc(ft)"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/theme_ft_smc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Using theme_ft_smc — theme_ft_smc","text":"ft flextable object","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/theme_ft_smc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Using theme_ft_smc — theme_ft_smc","text":"flextable object custom formatting","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/theme_ft_smc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Using theme_ft_smc — theme_ft_smc","text":"","code":"if (FALSE) { # \\dontrun{  library(flextable) library(dplyr)  iris %>%    slice(1:5) %>%    select(Species, everything()) %>%    flextable() %>%    footnote(i = 1, j = 1, value = as_paragraph(\"footer test\")) %>%    theme_ft_smc() } # }"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/theme_gg_smc.html","id":null,"dir":"Reference","previous_headings":"","what":" — theme_gg_smc","title":" — theme_gg_smc","text":"function meant used ggplot2 charts quickly format according San Mateo County Office Epidemiology Evaluation's style guide.","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/theme_gg_smc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":" — theme_gg_smc","text":"","code":"theme_gg_smc(plot,   plot_lines = \"horizontal\",   legend_loc = \"top\",   title_font_size = 18,   subtitle_font_size = 12,   caption_font_size = 8,   axis_font_size = 10)"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/theme_gg_smc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":" — theme_gg_smc","text":"plot ggplot2 object plot_lines Specify lines appear chart. default horizontal lines, can also choose: \"horizontal\" (default): horizontal lines \"vertical\": vertical lines \"\": horizontal vertical lines \"none\": lines plot legend_loc Specify legend location. default legend appear top, can override . available options : “left”,“top”, “right”, “bottom” \"none\" title_font_size numeric value specify font size title. default 18, minimum 6 maximum 60. subtitle_font_size numeric value specify font size subtitle. default 12, minimum 6 maximum 60. caption_font_size numeric value specify font size caption. default 8, minimum 6 maximum 60. axis_font_size numeric value specify font size axis labels. default 10, minimum 6 maximum 60.","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/theme_gg_smc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":" — theme_gg_smc","text":"ggplot2 object custom formatting","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/theme_gg_smc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":" — theme_gg_smc","text":"Using theme_gg_smc","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/theme_gg_smc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":" — theme_gg_smc","text":"","code":"# creating a jitter plot with `theme_gg_smc` if (FALSE) { # \\dontrun{ library(ggplot2)  iris %>%   ggplot(aes(x = Species, y = Sepal.Length)) +   geom_point(position = position_jitter(w = 1/6, h = 0),              size = 4,              color = \"#006cb6\",              alpha = 2/3) +   scale_y_continuous(limits = c(4, 8),                      breaks = seq(4, 8, 2)) +   labs(title = \"Iris Jitter Plot\") +   theme_gg_smc() } # }"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/theme_pl_smc.html","id":null,"dir":"Reference","previous_headings":"","what":"Using theme_pl_smc — theme_pl_smc","title":"Using theme_pl_smc — theme_pl_smc","text":"function meant used plotly charts quickly format according San Mateo County Office Epidemiology Evaluation's style guide","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/theme_pl_smc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using theme_pl_smc — theme_pl_smc","text":"","code":"theme_pl_smc(plot,    plot_lines = \"horizontal\",    legend_loc = \"top\",    ystart = \"tozero\",    title = NULL,    x_lab = NULL,    y_lab = NULL)"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/theme_pl_smc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Using theme_pl_smc — theme_pl_smc","text":"plot plotly plot object plot_lines Specify lines appear chart. default horizontal lines, can also choose: \"horizontal\" (default): horizontal lines \"vertical\": vertical lines \"\": horizontal vertical lines \"none\": lines plot legend_loc Specify legend location. default legend appear top, can override . available options : “left”,“top”, “right”, “bottom” \"none\" ystart Specify whether y-axis start zero. default start zero. options : \"tozero\" (default) : axis starts 0 \"none\": axis starts wherever plotly decides title string text plot title x_lab string text x-axis label y_lab string tect y-axis label","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/theme_pl_smc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Using theme_pl_smc — theme_pl_smc","text":"plotly object custom formatting","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/theme_pl_smc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Using theme_pl_smc — theme_pl_smc","text":"","code":"if (FALSE) { # \\dontrun{ library(plotly) library(dplyr)  title <- \"Sepal Lengths of Iris Species\" x <- \"Species\" y <- \"Sepal Length\"  iris_vals <- iris %>%   distinct(Species) %>%   mutate(number = as.numeric(Species))  iris %>%   plot_ly() %>%   add_markers(x = ~jitter(as.numeric(Species)), y = ~Sepal.Length,               color = ~Species,               marker = list(size = 6),               hoverinfo = \"text\",               text = ~paste0(\"Group: \", Species,                              \"<br>xval: \", Sepal.Length),               showlegend = FALSE) %>%               layout(xaxis = list(tickvals = iris_vals$number,                                   ticktext = iris_vals$Species)) %>%   theme_pl_smc(plot_lines = \"vertical\",                title = title,                x_lab = x,                y_lab = y) } # }"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/varchar_max.html","id":null,"dir":"Reference","previous_headings":"","what":"Get character variable (varchar) lengths for import into Azure — varchar_max","title":"Get character variable (varchar) lengths for import into Azure — varchar_max","text":"Use generate list varchar(n) specifications used R Azure import DBI:dbWriteTable() smcepi::azure_import_loop() functions. list specifies varchar(n) value character variable based maximum string length variable. n 255 variables maximum string lengths 255 less n maximum string length variables maximum string lengths longer 255.","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/varchar_max.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get character variable (varchar) lengths for import into Azure — varchar_max","text":"","code":"varchar_max(data)"},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/varchar_max.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get character variable (varchar) lengths for import into Azure — varchar_max","text":"data 2x2 dataset plan import Azure R","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/varchar_max.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get character variable (varchar) lengths for import into Azure — varchar_max","text":"named list specifies varchar(n) length variable","code":""},{"path":"https://san-mateo-county-health-epidemiology.github.io/smcepi/reference/varchar_max.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get character variable (varchar) lengths for import into Azure — varchar_max","text":"","code":"data <- data.frame(           col1 = c(\"blue\", \"pink\", \"green\", \"yellow\"),           col2 = c(paste(rep(\"a\", 1000), collapse = \"\"), \"b\", \"cc\", \"ddd\"))  varchar_max(data) #>            col1            col2  #>  \"varchar(255)\" \"varchar(1000)\"   # output: #           col1           col2 # \"varchar(255)\" \"varchar1000)\""}]
